plugins {
  id 'org.springframework.boot' version '2.5.5'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'java'
  id 'com.adarshr.test-logger' version '3.0.0'
  id 'org.liquibase.gradle' version '2.0.4'
}

group = 'exercise'

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  implementation 'org.liquibase:liquibase-core'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  runtimeOnly 'com.h2database:h2:1.4.200'

  // Подключаем зависимости, необходимые для работы плагина
  liquibaseRuntime 'org.liquibase:liquibase-core:3.8.1'
  liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
  liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:4.17.2'
  liquibaseRuntime sourceSets.main.output
}

test {
  useJUnitPlatform()
}

testlogger {
  showStandardStreams = true
}

// Настраиваем таскуdiffChangeLog таким образом,
// чтобы миграция генерировалась при каждом изменении в модели
diffChangeLog {
  dependsOn compileJava
}

// Настраиваем Liquibase
liquibase {
  activities {
    main {
      // Указываем путь, по которому будет сгенерирован файл миграции
      changeLogFile 'src/main/resources/db/changelog/changelog-master.xml'
      // Указывем источник, с которым будут сравниваться изменния
      // Это база данных, изначально она пустая
      url 'jdbc:h2:./hexlet'
      // Имя пользователя и пароль для подключения к базе
      username 'sa'
      password ''
      // Указывем, откуда мы будем брать изменения
      // Это модели
      // Указываем пакет, в котором расположены модели
      referenceUrl 'hibernate:spring:exercise.model' +
                    // Указываем диалект
                   '?dialect=org.hibernate.dialect.H2Dialect' +
                   // Указываем правила именования таблиц и столбцов,
                   // чтобы они соответствовали правилам Spring
                   '&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
    }
  }
}
